@model WebApplication1.Models.ViewModels.DocumentoAdjunto

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DocumentoAdjunto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DocumentoAdjuntoID)

        @{ if (ViewBag.Controladora == "Solicitud")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SolicitudID, "SolicitudID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownList("SolicitudID", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.Raw(ViewBag.DocumentoID)
                        @Html.HiddenFor(model => model.SolicitudID)                        
                        @Html.ValidationMessageFor(model => model.SolicitudID, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (ViewBag.Controladora == "Orden")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.OrdenID, "OrdenID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownList("OrdenID", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.Raw(ViewBag.DocumentoID)
                        @Html.HiddenFor(model => model.OrdenID)                        
                        @Html.ValidationMessageFor(model => model.OrdenID, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        } 

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoFechaCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DocumentoAdjuntoFechaCreacion, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DisplayFor(model => model.DocumentoAdjuntoFechaAprobacion)
                @Html.ValidationMessageFor(model => model.DocumentoAdjuntoFechaCreacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoFechaAprobacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentoAdjuntoFechaAprobacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentoAdjuntoFechaAprobacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoComentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentoAdjuntoComentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentoAdjuntoComentario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.DocumentoAdjuntoTipo, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DocumentoAdjuntoTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoCargado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DocumentoAdjuntoCargado)
                    @Html.ValidationMessageFor(model => model.DocumentoAdjuntoCargado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoAdjuntoAprobado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DocumentoAdjuntoAprobado)
                    @Html.ValidationMessageFor(model => model.DocumentoAdjuntoAprobado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    @{ if (ViewBag.Controladora == "Solicitud")
        {
            @Html.ActionLink("Vovler a la Solicitud", "Edit", "Solicitud", new { id = ViewBag.DocumentoID }, null)
        }
        else if (ViewBag.Controladora == "Orden")
        {
            @Html.ActionLink("Vovler a la Orden", "Edit", "Orden", new { id = ViewBag.DocumentoID }, null)
        }
    }
</div>
